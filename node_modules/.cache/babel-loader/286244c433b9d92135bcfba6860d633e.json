{"ast":null,"code":"var _jsxFileName = \"F:\\\\Github\\\\WORD_EDITOR\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; //import About from './components/About';\n\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the text to Analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor"],"sources":["F:/Github/WORD_EDITOR/src/App.js"],"sourcesContent":["import './App.css';\r\n//import About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light');// Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type)=>{\r\n      setAlert({\r\n        msg: message,\r\n        type: type\r\n      })\r\n      setTimeout(() => {\r\n          setAlert(null);\r\n      },1500);\r\n    }\r\n\r\n    const toggleMode = () =>{\r\n      if(mode === 'light'){\r\n          setMode('dark');\r\n          document.body.style.backgroundColor = '#042743';\r\n          showAlert(\"Dark mode has been enabled\", \"success\");\r\n      }\r\n      else {\r\n          setMode('light');\r\n          document.body.style.backgroundColor = 'white';\r\n          showAlert(\"Light mode has been enabled\", \"success\");\r\n      }\r\n  }\r\n  return ( \r\n  <>\r\n<Navbar title= \"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n<Alert alert={alert}/>\r\n<div className=\"container my-3\">\r\n<TextForm showAlert={showAlert} heading=\"Enter the text to Analyze below\" mode={mode}/>\r\n\r\n{/*<About/>*/}\r\n</div>\r\n</>  \r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAO,WAAP,C,CACA;;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,OAAD,CAAhC,CADa,CAC6B;;EAC1C,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMO,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAiB;IAC/BH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OADE;MAEPC,IAAI,EAAEA;IAFC,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACbL,QAAQ,CAAC,IAAD,CAAR;IACH,CAFS,EAER,IAFQ,CAAV;EAGD,CARH;;EAUE,MAAMM,UAAU,GAAG,MAAK;IACtB,IAAGT,IAAI,KAAK,OAAZ,EAAoB;MAChBC,OAAO,CAAC,MAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC;MACAT,SAAS,CAAC,4BAAD,EAA+B,SAA/B,CAAT;IACH,CAJD,MAKK;MACDH,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAT,SAAS,CAAC,6BAAD,EAAgC,SAAhC,CAAT;IACH;EACJ,CAXC;;EAYF,oBACA;IAAA,wBACF,QAAC,MAAD;MAAQ,KAAK,EAAE,WAAf;MAA2B,IAAI,EAAEJ,IAAjC;MAAuC,UAAU,EAAES;IAAnD;MAAA;MAAA;MAAA;IAAA,QADE,eAEF,QAAC,KAAD;MAAO,KAAK,EAAEP;IAAd;MAAA;MAAA;MAAA;IAAA,QAFE,eAGF;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACA,QAAC,QAAD;QAAU,SAAS,EAAEE,SAArB;QAAgC,OAAO,EAAC,iCAAxC;QAA0E,IAAI,EAAEJ;MAAhF;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QAHE;EAAA,gBADA;AAWD;;GArCQD,G;;KAAAA,G;AAuCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}